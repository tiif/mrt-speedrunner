[{"/home/byt/Documents/code/orbital/project/src/index.js":"1","/home/byt/Documents/code/orbital/project/src/App.js":"2","/home/byt/Documents/code/orbital/project/src/reportWebVitals.js":"3","/home/byt/Documents/code/orbital/project/src/component/header/Header.js":"4","/home/byt/Documents/code/orbital/project/src/component/header/GetUsers.js":"5","/home/byt/Documents/code/orbital/project/src/component/header/GetDoor.js":"6","/home/byt/Documents/code/orbital/project/src/component/GraphQL/Queries.js":"7","/home/byt/Documents/code/orbital/project/src/component/header/DetermineDirection.js":"8","/home/byt/Documents/code/orbital/project/src/component/header/GetKey.js":"9"},{"size":1173,"mtime":1687350434254,"results":"10","hashOfConfig":"11"},{"size":250,"mtime":1686476837723,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1683966645614,"results":"13","hashOfConfig":"11"},{"size":6882,"mtime":1688572828621,"results":"14","hashOfConfig":"11"},{"size":2029,"mtime":1687586809417,"results":"15","hashOfConfig":"11"},{"size":495,"mtime":1687586796591,"results":"16","hashOfConfig":"11"},{"size":152,"mtime":1687084034900,"results":"17","hashOfConfig":"11"},{"size":1149,"mtime":1687586585824,"results":"18","hashOfConfig":"11"},{"size":718,"mtime":1688482525329,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18gszbj",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/byt/Documents/code/orbital/project/src/index.js",["51"],[],"/home/byt/Documents/code/orbital/project/src/App.js",[],[],"/home/byt/Documents/code/orbital/project/src/reportWebVitals.js",[],[],"/home/byt/Documents/code/orbital/project/src/component/header/Header.js",["52","53","54","55","56","57","58","59","60"],[],"/home/byt/Documents/code/orbital/project/src/component/header/GetUsers.js",["61","62","63","64"],[],"import List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_USERS } from \"../GraphQL/Queries\";\nconst determineDirection = require (\"./DetermineDirection.js\")\nconst GetDoor = require(\"./GetDoor.js\")\n\n/**\n  * parameter: an array of station which consist of station code exp: [CC1, CC2, NS1, NS2]\n  * return: a list of array with station code with nearest door to escalator for each transit station.\n  */\nconst GetUsers = ({stations}) => { \n  const { error, loading, data } = useQuery(LOAD_USERS);\n  //the result array\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    if (data) {\n      var result = [];\n      var length = stations.length;\n      result.push(stations[0]);\n      result.push(stations[1]);\n      //use for each instead of for loop because of some react constrain\n      //if need to decrease the station shown, change here\n      stations.forEach((station, i) => {\n        //index constrain to prevent index out of bound\n        if (i > 1 && i < length - 1) {\n          if (stations[i] == \"Transit\") {\n            var dir = determineDirection(stations[i - 2], stations[i - 1]);\n            var station2 = stations[i + 1];\n            var door = GetDoor(data, dir, station2);\n            result.push(\"Board \" + stations[i - 1].substr(0, 2) + \" at door \" + door);\n          } else {\n            result.push(stations[i]);\n          }\n        }\n      });\n      result.push(stations[length - 1]);\n      setResult(result);\n    }\n  }, [data, stations]); //make sure update when station change\n  return (\n         <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n        {result.map((value) => (\n          <ListItem\n            key={value} \n            disableGutters>\n            <ListItemText primary={`${value}`} />\n          </ListItem>\n        ))}\n      </List>);\n}\n\nexport default GetUsers;\n\n",[],"/home/byt/Documents/code/orbital/project/src/component/header/GetDoor.js",["65","66"],[],"/** function that returns the door number\n  * data: the whole data from the graphql server\n  * station1: the direction code\n  * station2: the second leg of the transit station \n  */\nmodule.exports = function GetDoor(data, station1, station2) {\n  console.log(data);\n  var users = data.getAllUsers.filter((first) => first.name == station1)\n    .map((val) => val.next.filter((second) => second.name == station2))\n    .map((val) => val[0].door);\n //need error message if no result\n  return users;\n}\n","/home/byt/Documents/code/orbital/project/src/component/GraphQL/Queries.js",[],[],"/home/byt/Documents/code/orbital/project/src/component/header/DetermineDirection.js",["67","68","69","70","71"],[],"/**\n  * parameter:\n  * code1: the previous station of the same line\n  * code2: the next station of the same line\n  * exp: code1 is CC1, code2 is CC2\n  * return: direction code \n  */\nmodule.exports = function determineDirection(code1, code2) {\n  const firstNum = parseInt(code1.substr(2));\n  const secondNum = parseInt(code2.substr(2));\n  const line = code1.substr(0, 2);\n  console.log(firstNum);\n  console.log(secondNum);\n\n  if (line == \"CC\") {\n    if (firstNum < secondNum) {\n      return \"CC9\";\n    } else {\n      return \"CC810\";\n    }\n  } else if (line == \"NS\") {\n    if (firstNum < secondNum) {\n      return \"NS5\";\n    } else {\n      return \"NS4\";\n    }\n  } else if (line == \"DT\") {\n    if (firstNum < secondNum) {\n      return \"DT12\";\n    } else {\n      return \"DT11\";\n    }\n  } else if (line == \"TE\") {\n    if (firstNum < secondNum) {\n      return \"TE14\";\n    } else {\n      return \"TE13\";\n    }\n  } else if (line == \"NE\") {\n    if (firstNum < secondNum) {\n      return \"NE7\";\n    } else {\n      return \"NE6\";\n    }\n  } else {\n    if (firstNum < secondNum) {\n      return \"EW2\";\n    } else {\n      return \"EW13\";\n    }\n    //line == EW\n  }\n}\n\n","/home/byt/Documents/code/orbital/project/src/component/header/GetKey.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":18,"column":53,"nodeType":"74","messageId":"75","endLine":18,"endColumn":55},{"ruleId":"76","severity":1,"message":"77","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":16},{"ruleId":"76","severity":1,"message":"81","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":20},{"ruleId":"76","severity":1,"message":"82","line":9,"column":8,"nodeType":"78","messageId":"79","endLine":9,"endColumn":14},{"ruleId":"76","severity":1,"message":"83","line":20,"column":17,"nodeType":"78","messageId":"79","endLine":20,"endColumn":34},{"ruleId":"76","severity":1,"message":"84","line":20,"column":36,"nodeType":"78","messageId":"79","endLine":20,"endColumn":54},{"ruleId":"76","severity":1,"message":"85","line":106,"column":13,"nodeType":"78","messageId":"79","endLine":106,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":107,"column":115,"nodeType":"88","messageId":"89","endLine":107,"endColumn":117},{"ruleId":"86","severity":1,"message":"87","line":126,"column":31,"nodeType":"88","messageId":"89","endLine":126,"endColumn":33},{"ruleId":"76","severity":1,"message":"90","line":5,"column":20,"nodeType":"78","messageId":"79","endLine":5,"endColumn":23},{"ruleId":"76","severity":1,"message":"91","line":15,"column":11,"nodeType":"78","messageId":"79","endLine":15,"endColumn":16},{"ruleId":"76","severity":1,"message":"92","line":15,"column":18,"nodeType":"78","messageId":"79","endLine":15,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":29,"column":27,"nodeType":"88","messageId":"89","endLine":29,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":8,"column":61,"nodeType":"88","messageId":"89","endLine":8,"endColumn":63},{"ruleId":"86","severity":1,"message":"87","line":9,"column":59,"nodeType":"88","messageId":"89","endLine":9,"endColumn":61},{"ruleId":"86","severity":1,"message":"87","line":15,"column":12,"nodeType":"88","messageId":"89","endLine":15,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":21,"column":19,"nodeType":"88","messageId":"89","endLine":21,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":27,"column":19,"nodeType":"88","messageId":"89","endLine":27,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":33,"column":19,"nodeType":"88","messageId":"89","endLine":33,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":39,"column":19,"nodeType":"88","messageId":"89","endLine":39,"endColumn":21},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'GetKey' is defined but never used.","'FiArrowLeftCircle' is defined but never used.","'FiArrowRightCircle' is defined but never used.","'subway_result' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'gql' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used."]