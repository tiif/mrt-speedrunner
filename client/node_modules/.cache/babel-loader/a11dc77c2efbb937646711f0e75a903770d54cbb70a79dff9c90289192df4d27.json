{"ast":null,"code":"var _jsxFileName = \"/home/byt/Documents/code/orbital/project/src/component/header/GetUsers.js\",\n  _s = $RefreshSig$();\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_USERS } from \"../GraphQL/Queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst determineDirection = require(\"./DetermineDirection.js\");\nconst GetDoor = require(\"./GetDoor.js\");\nconst GetUsers = _ref => {\n  _s();\n  let {\n    stations\n  } = _ref;\n  console.log(\"getuser\");\n  console.log(stations);\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_USERS);\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    if (data) {\n      var result = [];\n      //remember to change the input array structure\n      //var stations = [\"CC1\", \"CC2\",\"Transit\", \"NS25\", \"NS3\"];\n      var length = stations.length;\n      result.push(stations[0]);\n      stations.forEach((station, i) => {\n        //index constrain\n        console.log(i);\n        if (i > 0 && i < length - 1) {\n          if (stations[i] == \"Transit\") {\n            var dir = determineDirection(stations[i - 1], stations[i + 1]);\n            var station2 = stations[i + 1];\n            var door = GetDoor(data, dir, station2);\n            result.push(\"Board \" + stations[i - 1].substr(0, 2) + \" at door \" + door);\n          } else {\n            result.push(stations[i]);\n          }\n        }\n      });\n      /* suspend for testing\n      for (var i = 1; i < length - 1; i++) {\n        console.log(i);\n        if (stations[i] == \"Transit\") {\n          var dir = determineDirection(stations[i - 1], stations[i + 1]);\n          var station2 = stations[i + 1];\n          var door = GetDoor(data, dir, station2);\n          result.push(\"Board \" + stations[i - 1].substr(0, 2) + \" at door \" + door);\n        } else {\n          result.push(stations[i]);\n        }\n      } */\n      result.push(stations[length - 1]);\n      setResult(result);\n    }\n  }, [data, stations]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: result.map(value => /*#__PURE__*/_jsxDEV(ListItem, {\n      disableGutters: true,\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: `${value}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(GetUsers, \"gk3Th+4s8MeWFazB9hwyPo+PQxM=\", false, function () {\n  return [useQuery];\n});\n_c = GetUsers;\nexport default GetUsers;\nvar _c;\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["List","ListItem","ListItemText","useEffect","useState","useQuery","gql","LOAD_USERS","jsxDEV","_jsxDEV","determineDirection","require","GetDoor","GetUsers","_ref","_s","stations","console","log","error","loading","data","result","setResult","length","push","forEach","station","i","dir","station2","door","substr","sx","width","maxWidth","bgcolor","children","map","value","disableGutters","primary","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/byt/Documents/code/orbital/project/src/component/header/GetUsers.js"],"sourcesContent":["import List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_USERS } from \"../GraphQL/Queries\";\nconst determineDirection = require (\"./DetermineDirection.js\")\nconst GetDoor = require(\"./GetDoor.js\")\n\nconst GetUsers = ({stations}) => { \n  console.log(\"getuser\");\n  console.log(stations);\n  const { error, loading, data } = useQuery(LOAD_USERS);\n  const [result, setResult] = useState([]);\n  useEffect(() => {\n    if (data) {\n      var result = [];\n      //remember to change the input array structure\n      //var stations = [\"CC1\", \"CC2\",\"Transit\", \"NS25\", \"NS3\"];\n      var length = stations.length;\n      result.push(stations[0]);\n      stations.forEach((station, i) => {\n        //index constrain\n        console.log(i);\n        if (i > 0 && i < length - 1) {\n          if (stations[i] == \"Transit\") {\n            var dir = determineDirection(stations[i - 1], stations[i + 1]);\n            var station2 = stations[i + 1];\n            var door = GetDoor(data, dir, station2);\n            result.push(\"Board \" + stations[i - 1].substr(0, 2) + \" at door \" + door);\n          } else {\n            result.push(stations[i]);\n          }\n        }\n      });\n      /* suspend for testing\n      for (var i = 1; i < length - 1; i++) {\n        console.log(i);\n        if (stations[i] == \"Transit\") {\n          var dir = determineDirection(stations[i - 1], stations[i + 1]);\n          var station2 = stations[i + 1];\n          var door = GetDoor(data, dir, station2);\n          result.push(\"Board \" + stations[i - 1].substr(0, 2) + \" at door \" + door);\n        } else {\n          result.push(stations[i]);\n        }\n      } */\n      result.push(stations[length - 1]);\n      setResult(result);\n    }\n  }, [data, stations]);\n  return (\n         <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n        {result.map((value) => (\n          <ListItem\n            key={value} \n            disableGutters>\n            <ListItemText primary={`${value}`} />\n          </ListItem>\n        ))}\n      </List>);\n}\n\nexport default GetUsers;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}