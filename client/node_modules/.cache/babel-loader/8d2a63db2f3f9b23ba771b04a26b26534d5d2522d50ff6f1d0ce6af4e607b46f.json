{"ast":null,"code":"var _jsxFileName = \"/home/byt/Documents/code/orbital/project/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\n//Apollo client setup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkError\n  } = _ref;\n  if (graphqlErrors) {\n    graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconsole.log(process.env.API_URL);\n//link for the graphql\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:6969/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","jsxDEV","_jsxDEV","errorLink","_ref","graphqlErrors","networkError","map","_ref2","message","location","path","alert","console","log","process","env","API_URL","link","uri","client","cache","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/byt/Documents/code/orbital/project/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\n//Apollo client setup\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconsole.log(process.env.API_URL);\n//link for the graphql\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:6969/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n  <ApolloProvider client={client}>\n  <App />\n  </ApolloProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SACEC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,QAAQ,EACRC,IAAI,QACC,gBAAgB;AACvB,SAASC,OAAO,QAAQ,2BAA2B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGH,OAAO,CAACI,IAAA,IAAqC;EAAA,IAApC;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACxD,IAAIC,aAAa,EAAE;IACjBA,aAAa,CAACE,GAAG,CAACC,KAAA,IAAiC;MAAA,IAAhC;QAAEC,OAAO;QAAEC,QAAQ;QAAEC;MAAK,CAAC,GAAAH,KAAA;MAC5CI,KAAK,CAAE,iBAAgBH,OAAQ,EAAC,CAAC;IACnC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFI,OAAO,CAACC,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;AAChC;AACA,MAAMC,IAAI,GAAGnB,IAAI,CAAC,CAChBI,SAAS,EACT,IAAIL,QAAQ,CAAC;EAAEqB,GAAG,EAAE;AAAgC,CAAC,CAAC,CACvD,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIzB,YAAY,CAAC;EAC9B0B,KAAK,EAAE,IAAIzB,aAAa,CAAC,CAAC;EAC1BsB,IAAI,EAAEA;AACR,CAAC,CAAC;AAEF,MAAMI,IAAI,GAAG9B,QAAQ,CAAC+B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTxB,OAAA,CAACX,KAAK,CAACoC,UAAU;EAAAC,QAAA,eACjB1B,OAAA,CAACL,cAAc;IAACuB,MAAM,EAAEA,MAAO;IAAAQ,QAAA,eAC/B1B,OAAA,CAACT,GAAG;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACpB,CAAC;;AAED;AACA;AACA;AACAtC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}